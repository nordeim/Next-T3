# -------------------------
# Application environment
# -------------------------
# Set explicitly for clarity in dev; Next.js defaults to "development" locally.
NODE_ENV=development

# -------------------------
# NextAuth / Authentication
# -------------------------
# Generate a strong random secret for signing JWTs (stable between runs):
# On Linux: openssl rand -base64 32
AUTH_SECRET=replace-with-a-long-random-string

# Discord OAuth credentials (from Discord Developer Portal)
# Ensure your redirect URL matches NextAuth route:
# http://localhost:3000/api/auth/callback/discord
AUTH_DISCORD_ID=replace-with-your-discord-client-id
AUTH_DISCORD_SECRET=replace-with-your-discord-client-secret

# -------------------------
# Database (PostgreSQL via Prisma)
# -------------------------
# IMPORTANT: use Docker service name (postgres), not localhost.
# Matches docker-compose: POSTGRES_USER=appuser, POSTGRES_PASSWORD=apppass, POSTGRES_DB=appdb
DATABASE_URL=postgresql://appuser:apppass@postgres:5432/appdb?schema=public

# -------------------------
# MariaDB (optional, if your app uses it)
# -------------------------
MARIADB_HOST=mariadb
MARIADB_PORT=3306
MARIADB_DATABASE=appdb
MARIADB_USER=appuser
MARIADB_PASSWORD=apppass

# -------------------------
# Redis
# -------------------------
REDIS_HOST=redis
REDIS_PORT=6379

# -------------------------
# SMTP / Mailhog
# -------------------------
# For server-side email sending:
SMTP_HOST=mailhog
SMTP_PORT=1025

# -------------------------
# Client-side env (prefix NEXT_PUBLIC_)
# -------------------------
# Do NOT expose secrets here. Only non-sensitive values should be prefixed with NEXT_PUBLIC_.
# Example:
# NEXT_PUBLIC_APP_NAME=T3 Test

# The canonical URL of your app in production
NEXTAUTH_URL=http://192.168.2.132:3000

# If you also want to allow localhost for testing:
NEXTAUTH_URL_INTERNAL=http://localhost:3000
